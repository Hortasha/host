{"version":3,"sources":["App.js","serviceWorker.js","components/module-button/module-button.jsx","components/editable-text/editable-text.jsx","components/module-slide/module-slide.jsx","components/course-detail/course-detail.jsx","components/module-detail/module-detail.jsx","components/new-module/new-module.jsx","components/new-slide/new-slide.jsx","pages/Course-Page/Course-Page.jsx","index.js"],"names":["App","react_default","a","createElement","className","this","props","children","Component","Boolean","window","location","hostname","match","ModuleButton","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clicked","bind","assertThisInitialized","moduleClicked","id","onClick","React","EditableText","state","data","undefined","edit","click","handleKeyPress","handleChange","handleBlur","setState","event","key","update","type","target","name","description","title","content","console","error","value","style","classes","join","onKeyPress","autoFocus","onBlur","onChange","Slide","method","deleteSlide","delete","slide","class","editable_text","fontSize","fontWeight","src","alt","CourseDetail","course","ModuleDetail","deleteModule","module","AddModule","CoursePage","courses","modules","slides","activeModules","activeSlides","selectedCourse","selectedModule","getData","addData","test","addModule","addSlide","manageAPI","updateData","dataChange","deleteData","dataDelete","_this2","then","fetch","response","json","_this3","result","_this4","filteredModules","filter","courseID","filteredSlides","moduleID","log","addJSON","JSON","stringify","headers","Accept","Content-Type","body","object","_this5","document","getElementById","scrollIntoView","behavior","block","mDetail","mod","_this6","_this7","_this8","_this9","_this10","cDetail","marginLeft","marginRight","textAlign","course_detail","length","map","i","module_button","new_module","Fragment","module_detail","module_slide","new_slide","ReactDOM","render","BrowserRouter","src_App_0","Route","path","exact","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da99808e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","//This is the round button you click when you select a course module\r\n\r\n/* \r\n * You need to render a button\r\n * Recive a method from parent component that should run on click.\r\n * Recive a text from parent component that should be displayed by the button.\r\n * \r\n * Functinality of this button will be to display the module selected further down on the page and scroll you down to this section\r\n*/\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nclass ModuleButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.clicked = this.clicked.bind(this);\r\n    }\r\n\r\n    clicked() {\r\n        this.props.moduleClicked(this.props.id);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"col-sm-4\">\r\n                <button className=\"modules-button\" onClick={ this.clicked }>\r\n                    <h2 className=\"heading\">{ this.props.children }</h2>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModuleButton;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass EditableText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: (this.props.children === undefined) ? \"\" : this.props.children,\r\n            edit: false\r\n        }\r\n\r\n        this.click = this.click.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    click() {\r\n        this.setState({\r\n            edit: true,\r\n            data: this.props.children\r\n        });\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if(event.key === 'Enter') {\r\n            switch(this.props.data) {\r\n                case \"name\":\r\n                    this.props.update(this.props.type, this.props.target.id, {\r\n                        name: this.state.data\r\n                    });\r\n                break;\r\n    \r\n                case \"description\":\r\n                    this.props.update(this.props.type, this.props.target.id, {\r\n                        description: this.state.data\r\n                    });\r\n                break;\r\n    \r\n                case \"title\":\r\n                    this.props.update(this.props.type, this.props.target.id, {\r\n                        title: this.state.data\r\n                    });\r\n                break;\r\n    \r\n                case \"content\":\r\n                    this.props.update(this.props.type, this.props.target.id, {\r\n                        content: this.state.data\r\n                    });\r\n                break;\r\n\r\n                default:\r\n                    console.error(\"something went wrong with switch statement\");\r\n                break;\r\n            }\r\n\r\n            this.setState({\r\n                edit: false\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    handleBlur() {\r\n\r\n        switch(this.props.data) {\r\n            case \"name\":\r\n                this.props.update(this.props.type, this.props.target.id, {\r\n                    name: this.state.data\r\n                });\r\n            break;\r\n\r\n            case \"description\":\r\n                this.props.update(this.props.type, this.props.target.id, {\r\n                    description: this.state.data\r\n                });\r\n            break;\r\n\r\n            case \"title\":\r\n                this.props.update(this.props.type, this.props.target.id, {\r\n                    title: this.state.data\r\n                });\r\n            break;\r\n\r\n            case \"content\":\r\n                this.props.update(this.props.type, this.props.target.id, {\r\n                    content: this.state.data\r\n                });\r\n            break;\r\n\r\n            default:\r\n                console.error(\"something went wrong with switch statement\");\r\n            break;\r\n        }\r\n\r\n        this.setState({\r\n            edit: false\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            data: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.style;\r\n        const classes = [\r\n            \"editableText\"\r\n        ];\r\n\r\n        return(\r\n            //Edit mode?\r\n            this.state.edit\r\n            \r\n            ?\r\n\r\n            //Edit mode\r\n            <div className={classes.join(\" \")} style={style}>\r\n                <input\r\n                    onKeyPress={this.handleKeyPress}\r\n                    autoFocus={true}\r\n                    onBlur={this.handleBlur}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.data}\r\n                />\r\n            </div>\r\n            \r\n            :\r\n\r\n            //Non edit mode\r\n            <div className={classes.join(\" \")} style={style}>\r\n                <p>\r\n                    {(this.props.children === \"\") ? \"<empty> \" : this.props.children + \" \"}\r\n                    <span onClick={this.click}>\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditableText;\r\n\r\n/*\r\n * Component is text you can edit\r\n *\r\n * Props:\r\n * - children\r\n * - style\r\n * - update function\r\n * - data\r\n * - target\r\n */","//This should display one of the slides from selected module\r\n\r\n/* \r\n * Recive slide information from parent and render.\r\n * Recive onClick method from parent to display slide in \"powerpoint mode\"\r\n * Should render a delete component\r\n * \r\n * You should also have a option to edit this information\r\n */\r\n\r\nimport React from 'react';\r\nimport EditableText from './../editable-text/editable-text';\r\n\r\nclass Slide extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = ({\r\n            //slide: this.props.slide,\r\n            method: this.props.method\r\n        })\r\n        this.deleteSlide = this.deleteSlide.bind(this);\r\n    }\r\n\r\n    deleteSlide() {\r\n        this.props.delete(\"slides\", this.props.slide.id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-sm-6 slide\">\r\n                <span onClick={this.deleteSlide} className=\"slides--element__delete\"><i class=\"fas fa-trash-alt\"></i></span>\r\n                <div className=\"slides--element\">\r\n                    <div className=\"slides--text\">\r\n                        <EditableText style={{fontSize: \"2rem\", fontWeight: \"bold\"}} update={this.props.update} type=\"slides\" target={this.props.slide} data=\"title\">{this.props.slide.title}</EditableText>\r\n                    </div>\r\n                    <div className=\"slides--img\">\r\n                        <img className=\"slides--element__img\" src=\"https://s-media-cache-ak0.pinimg.com/736x/c4/d4/82/c4d482a830bc0580f42d3b6fd26a034a--colour-palettes-scenery.jpg\" alt={ this.props.slide.title } />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Slide;","import React, { Component } from 'react';\r\nimport EditableText from './../editable-text/editable-text';\r\n\r\nclass CourseDetail extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-sm-6\">\r\n          <div className=\"courseDetail-section\">\r\n            <h4>Course ID: {this.props.course ? this.props.course.id : \"\"}</h4>\r\n          </div>\r\n          <div className=\"courseDetail-section\">\r\n            <h4>Course name:</h4>\r\n            {this.props.course ? <EditableText style={{fontSize: \"20px\"}} update={this.props.update} type=\"courses\" target={this.props.course} data=\"name\">{this.props.course.name}</EditableText> : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <div className=\"courseDetail-section\">\r\n            <h4>Course description</h4>\r\n            {this.props.course ? <EditableText style={{fontSize: \"20px\"}} update={this.props.update} type=\"courses\" target={this.props.course} data=\"description\">{this.props.course.description}</EditableText> : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseDetail;\r\n\r\n//This should contain course information\r\n\r\n/* \r\n * Recive course information from parent and render this data.\r\n * \r\n * Functinality of this section is to display course information from API.\r\n * You should also have a option to edit this information.\r\n * --- might not be dumb component ---\r\n*/\r\n","import React, { Component } from 'react';\r\nimport EditableText from './../editable-text/editable-text';\r\n\r\nclass ModuleDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteModule = this.deleteModule.bind(this);\r\n  }\r\n\r\n  deleteModule() {\r\n    this.props.delete(\"modules\", this.props.module.id);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-sm-6\">\r\n          <div className=\"moduleDetail-section\">\r\n            <h4>Module ID: {this.props.module ? this.props.module.id : \"\"}</h4>\r\n          </div>\r\n          <div className=\"moduleDetail-section\">\r\n            <h4>Module name:</h4>\r\n            {this.props.module ? <EditableText update={this.props.update} type=\"modules\" target={this.props.module} data=\"name\">{this.props.module.name}</EditableText> : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <div className=\"moduleDetail-section\">\r\n            <h4>Module description</h4>\r\n            {this.props.module ? <EditableText update={this.props.update} type=\"modules\" target={this.props.module} data=\"description\">{this.props.module.description}</EditableText> : \"\"}\r\n          </div>\r\n          <div className=\"moduleDetail-section\">\r\n            <span onClick={this.deleteModule} className=\"module-element-delete\">Delete Module <i className=\"fas fa-trash-alt\"></i></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModuleDetail;\r\n\r\n//This should contain course information\r\n\r\n/* \r\n * Recive course information from parent and render this data.\r\n * \r\n * Functinality of this section is to display course information from API.\r\n * You should also have a option to edit this information.\r\n * --- might not be dumb component ---\r\n*/\r\n","import React from 'react';\r\n\r\nclass AddModule extends React.Component{\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"col-sm-4\">\r\n                <div className=\"add-module\" onClick={this.props.method}>\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModule;","import React from 'react';\r\n\r\nclass AddModule extends React.Component{\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"add-slide\" onClick={this.props.method}>\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModule;","import React, { Component } from 'react';\r\nimport ModuleButton from './../../components/module-button/module-button';\r\nimport Slide from './../../components/module-slide/module-slide';\r\nimport CourseDetail from './../../components/course-detail/course-detail';\r\nimport ModuleDetail from './../../components/module-detail/module-detail';\r\nimport AddModule from './../../components/new-module/new-module';\r\nimport AddSlide from './../../components/new-slide/new-slide';\r\n\r\nclass CoursePage extends Component {\r\n\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        courses: [],\r\n        modules: [],\r\n        slides: [],\r\n        activeModules: [],\r\n        activeSlides: [],\r\n        selectedCourse: 1,\r\n        selectedModule: 0\r\n      }\r\n\r\n      this.getData = this.getData.bind(this);\r\n      this.addData = this.addData.bind(this);\r\n      this.test = this.test.bind(this);\r\n      this.addModule = this.addModule.bind(this);\r\n      this.addSlide = this.addSlide.bind(this);\r\n      this.manageAPI = this.manageAPI.bind(this);\r\n      this.update = this.update.bind(this);\r\n      this.moduleClicked = this.moduleClicked.bind(this);\r\n      this.updateData = this.updateData.bind(this);\r\n      this.dataChange = this.dataChange.bind(this);\r\n      this.deleteData = this.deleteData.bind(this);\r\n      this.dataDelete = this.dataDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update(\"courses\")\r\n    .then(() => this.update(\"modules\"))\r\n    .then(() => this.update(\"slides\"))\r\n  }\r\n\r\n  getData(type){\r\n    return fetch('/' + type)\r\n    .then((response) => {\r\n        return response.json();\r\n    })\r\n  }\r\n\r\n  update(type) {\r\n    return this.getData(type)\r\n      .then(result => this.manageAPI(type, result));\r\n  }\r\n\r\n  manageAPI(type, result) {\r\n    switch(type) {\r\n      case \"courses\":\r\n        this.setState({\r\n          courses: result\r\n        })\r\n      break;\r\n\r\n      case \"modules\":\r\n        this.setState({\r\n          modules: result\r\n        });\r\n        \r\n        const filteredModules = result.filter(module => module.courseID === this.state.selectedCourse);\r\n        \r\n        this.setState({\r\n          activeModules: filteredModules\r\n        })\r\n      break;\r\n      case \"slides\":\r\n        this.setState({\r\n          slides: result\r\n        })\r\n\r\n        const filteredSlides = result.filter(slide => slide.courseID === this.state.selectedCourse && slide.moduleID === this.state.selectedModule)\r\n\r\n        this.setState({\r\n          activeSlides: filteredSlides\r\n        });\r\n\r\n      break;\r\n\r\n      default:\r\n        console.log(\"Something went wrong in fetch switch statement\");\r\n      break;\r\n    }\r\n  }\r\n\r\n  addData(type) {\r\n    let addJSON;\r\n\r\n    switch(type) {\r\n      case 'courses':\r\n        addJSON = JSON.stringify({\r\n          name: '',\r\n          description: ''\r\n        })\r\n      break;\r\n\r\n      case 'modules':\r\n      addJSON = JSON.stringify({\r\n        courseID: this.state.selectedCourse,\r\n        name: '',\r\n        description: ''\r\n      })\r\n      break;\r\n\r\n      case 'slides':\r\n      addJSON = JSON.stringify({\r\n        courseID: this.state.selectedCourse,\r\n        moduleID: this.state.selectedModule,\r\n        title: '',\r\n        content: ''\r\n      })\r\n      break;\r\n      \r\n      default:\r\n      console.log('Error in POST function')\r\n      break;\r\n    }\r\n    //Add new empty module or slide\r\n    return fetch('/' + type, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: addJSON\r\n    })\r\n  }\r\n\r\n  updateData(type, id, object) {\r\n    console.log(type, id, object)\r\n    return fetch('/' + type + \"/\" + id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }, body: JSON.stringify(object)\r\n    })\r\n  }\r\n\r\n  deleteData(type, id) {\r\n    return fetch('/' + type + '/' + id, {\r\n      method: 'delete'\r\n    })\r\n    .then(response =>\r\n      console.log(response)\r\n    );\r\n  }\r\n\r\n  moduleClicked(id) {\r\n    this.setState({\r\n      selectedModule: id\r\n    });\r\n    this.update(\"modules\")\r\n    .then(() => {\r\n      let target = document.getElementById(\"module\");\r\n      target.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    })\r\n    this.update(\"slides\");\r\n    this.setState({\r\n      mDetail: this.state.activeModules.filter(mod => mod.id === this.state.selectedModule)[0]\r\n    });\r\n  }\r\n\r\n  dataChange(type, id, object) {\r\n    this.updateData(type, id, object)\r\n      .then(() => this.update(type))\r\n  }\r\n\r\n  addSlide() {\r\n    this.addData(\"slides\")\r\n      .then(() => this.update(\"slides\"))\r\n  }\r\n\r\n\r\n  addModule() {\r\n    //Add new module\r\n    this.addData(\"modules\")\r\n      .then(() => this.update(\"modules\"))\r\n  }\r\n\r\n  dataDelete(type, id) {\r\n    if(type === \"modules\") {\r\n      this.setState({\r\n        selectedModule: 0\r\n      })\r\n    }\r\n    this.deleteData(type, id)\r\n      .then(() => this.update(type))\r\n  }\r\n\r\n  test() {\r\n    console.log(\"function check\");\r\n  }\r\n\r\n //You should only make api calls in these pages   \r\n  render() {\r\n\r\n    let cDetail = this.state.courses.filter(course => course.id === this.state.selectedCourse)[0];\r\n    let mDetail = this.state.activeModules.filter(mod => mod.id === this.state.selectedModule)[0];\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header row\">\r\n          <div className=\"col-sm-12\">\r\n            <h1>MY COURSES</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"courseDetail row\" style={{marginLeft: \"0\", marginRight: \"0\"}}>\r\n          <h3 style={{textAlign: \"center\"}}>Course Information</h3>  \r\n          <CourseDetail course={cDetail} update={this.dataChange}/>\r\n        </div>\r\n\r\n        <div className=\"row modules\">\r\n          <h3>Modules in this course</h3>\r\n          {(this.state.activeModules.length !== 0) ? this.state.activeModules.map(i => <ModuleButton moduleClicked={this.moduleClicked} id={i.id} key={i.id}>{i.name}</ModuleButton>) : \"\"}\r\n          <AddModule method={this.addModule}></AddModule>\r\n       </div>\r\n\r\n        {\r\n\r\n        (this.state.selectedModule !== 0 )\r\n        \r\n        ?\r\n        <React.Fragment>\r\n          <div id=\"module\" className=\"row moduleDetail\" style={{marginLeft: \"0\", marginRight: \"0\"}}>\r\n            <h3 style={{textAlign: \"center\"}}>Module Information</h3>\r\n            {<ModuleDetail module={mDetail} update={this.dataChange} delete={this.dataDelete} />}\r\n          </div>\r\n          <div className=\"slides row\">\r\n            {/* Slide components with data from api will be added here*/}\r\n            <h3 style={{textAlign: \"center\"}}>Slides</h3>\r\n            {(this.state.activeSlides.length !== 0) ? this.state.activeSlides.map(i => <Slide method={this.test} key={i.id} slide={i} update={this.dataChange} delete={this.dataDelete} />) : \"\"}\r\n            <AddSlide method={this.addSlide}></AddSlide>\r\n          </div>\r\n        </React.Fragment>\r\n\r\n        :\r\n\r\n        <React.Fragment></React.Fragment>\r\n\r\n        }\r\n\r\n        <div className=\"footer row\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoursePage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import UpdatedCoursePage from './pages/Course-Updated/Course-Page';\r\nimport CoursePage from './pages/Course-Page/Course-Page';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App>\r\n            <Route path=\"/\" exact component={CoursePage} />\r\n        </App>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}